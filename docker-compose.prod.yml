version: '3.8'

services:
  web:
    build:
      context: services/web
      dockerfile: Dockerfile.prod
    command: gunicorn --bind 0.0.0.0:5000 manage:app
    expose:
      - 5000
    env_file:
      - ./.env.prod
    depends_on:
      - db

  nginx:
    build: ./services/nginx
    volumes:
      - static_volume:/home/app/web/project/static
    ports:
      - 1337:80
    depends_on:
      - web
  db:
    container_name: flpostgres
    hostname: flpostgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_USER:-videoteka}
      PGDATA: /data/postgres
    volumes:
      - postgres:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    restart: unless-stopped

  pgadmin:
    container_name: flask_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped


networks:
  postgres:
    driver: bridge

volumes:
  postgres_data_prod:
  postgres:
  pgadmin:
  static_volume: